name: CD for orgnote backend

on:
  workflow_run:
    workflows:
      - CI for orgnote backend
    types:
      - completed

env:
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  API_URL: ${{ vars.API_URL }}
  GITHUB_ID: ${{ secrets.OAUTH_GITHUB_ID }}
  GITHUB_SECRET: ${{ secrets.OAUTH_GITHUB_SECRET }}
  CLIENT_ADDRESS: ${{ vars.CLIENT_ADDRESS }}
  BACKEND_HOST: ${{ vars.BACKEND_HOST }}
  BACKEND_DOMAIN: ${{ vars.BACKEND_DOMAIN }}
  BACKEND_SCHEMA: ${{ vars.BACKEND_SCHEMA }}
  ACCESS_CHECK_URL: ${{ vars.ACCESS_CHECK_URL }}
  ACCESS_CHECK_TOKEN: ${{ secrets.ACCESS_CHECK_TOKEN }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.conclusion == 'success' && 
      github.event.workflow_run.head_branch == 'master' }}
    environment: deploy
    steps:
      - name: deploy
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # TODO: master teplace .env with secrets
          command: |
            cd ~/orgnote/orgnote-backend
            docker-compose -f docker-compose.db.yaml -f docker-compose.prod.yaml down
            docker system prune -f
            eval $(ssh-agent -s)
            ssh-add ~/.ssh/sb-back
            git checkout master
            git fetch --all
            git reset --hard origin/master

            cat <<EOT > .env
            DEBUG=true
            API_URL=${{ env.API_URL }}
            MONGO_USERNAME=${{ env.MONGO_USERNAME }}
            MONGO_PASSWORD=${{ env.MONGO_PASSWORD }}
            GITHUB_ID=${{ env.GITHUB_ID }}
            GITHUB_SECRET=${{ env.GITHUB_SECRET }}
            CLIENT_ADDRESS=${{ env.CLIENT_ADDRESS }}
            BACKEND_HOST=${{ env.BACKEND_HOST }}
            BACKEND_DOMAIN=${{ env.BACKEND_DOMAIN }}
            BACKEND_SCHEMA=${{ env.BACKEND_SCHEMA }}
            ACCESS_CHECK_URL=${{ env.ACCESS_CHECK_URL }}
            ACCESS_CHECK_TOKEN=${{ env.ACCESS_CHECK_TOKEN }}
            EOT

            docker login --username=${{ secrets.DOCKERHUB_USERNAME }} --password=${{ secrets.DOCKERHUB_TOKEN }}
            docker pull orgnote/client

            docker-compose -f docker-compose.db.yaml -f docker-compose.prod.yaml up --build -d
          args: "-tt -vvv"
